---
title: "Multivariate Meta-Analysis of Discrete-Time VAR Estimates (Random-Effects Model)"
author: Ivan Jacob Agaloos Pesigan
date: "`r Sys.Date()`"
bibliography: "vignettes.bib"
csl: https://raw.githubusercontent.com/citation-style-language/styles/master/apa.csl
nocite: |
  @Cheung-2015
  @RCoreTeam-2024
  @Neale-Hunter-Pritikin-etal-2015
  @Hunter-2017
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Multivariate Meta-Analysis of Discrete-Time VAR Estimates (Random-Effects Model)}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r}
#| include = FALSE
knitr::opts_chunk$set(
  collapse = TRUE,
  fig.path = "fig-vignettes-fit-dt-var-id-mx-random-",
  fig.cap = "",
  fig.width = 11,
  fig.height = 8,
  fig.retina = 2,
  dpi = 300,
  comment = "#>"
)
```

```{r}
#| echo = FALSE
set.seed(42)
n <- 10
time <- 500
k <- p <- 3
iden <- diag(k)
null_vec <- rep(x = 0, times = k)
mu0 <- list(
  null_vec
)
sigma0 <- diag(p)
sigma0_l <- list(
  t(chol(sigma0))
)
alpha <- list(
  null_vec
)
psi <- 0.1 * iden
psi_l <- list(
  t(chol(psi))
)
```

```{r}
#| echo = FALSE
library(simStateSpace)
beta_mu <- matrix(
  data = c(
    0.7, 0.5, -0.1,
    0.0, 0.6, 0.4,
    0, 0, 0.5
  ),
  nrow = p
)
beta_sigma <- 0.01 * diag(p * p)
beta <- SimBetaN(
  n = n,
  beta = beta_mu,
  vcov_beta_vec_l = t(chol(beta_sigma))
)
```

## Model

The measurement model is given by
\begin{equation}
  \mathbf{y}_{i, t}
  =
  \boldsymbol{\eta}_{i, t}
\end{equation}
where $\mathbf{y}_{i, t}$
represents a vector of observed variables
and $\boldsymbol{\eta}_{i, t}$
a vector of latent variables
for individual $i$ and time $t$.
Since the observed and latent variables are equal,
we only generate data
from the dynamic structure.

The dynamic structure is given by
\begin{equation}
  \boldsymbol{\eta}_{i, t}
  =
  \boldsymbol{\alpha}
  +
  \boldsymbol{\beta}
  \boldsymbol{\eta}_{i, t - 1}
  +
  \boldsymbol{\zeta}_{i, t},
  \quad
  \mathrm{with}
  \quad
  \boldsymbol{\zeta}_{i, t}
  \sim
  \mathcal{N}
  \left(
  \mathbf{0},
  \boldsymbol{\Psi}
  \right)
\end{equation}
where
$\boldsymbol{\eta}_{i, t}$,
$\boldsymbol{\eta}_{i, t - 1}$,
and
$\boldsymbol{\zeta}_{i, t}$
are random variables,
and
$\boldsymbol{\alpha}$,
$\boldsymbol{\beta}$,
and
$\boldsymbol{\Psi}$
are model parameters.
Here,
$\boldsymbol{\eta}_{i, t}$
is a vector of latent variables
at time $t$ and individual $i$,
$\boldsymbol{\eta}_{i, t - 1}$
represents a vector of latent variables
at time $t - 1$ and individual $i$,
and
$\boldsymbol{\zeta}_{i, t}$
represents a vector of dynamic noise
at time $t$ and individual $i$.
$\boldsymbol{\alpha}$
denotes a vector of intercepts,
$\boldsymbol{\beta}$
a matrix of autoregression
and cross regression coefficients,
and
$\boldsymbol{\Psi}$
the covariance matrix of
$\boldsymbol{\zeta}_{i, t}$.

An alternative representation of the dynamic noise
is given by
\begin{equation}
  \boldsymbol{\zeta}_{i, t}
  =
  \boldsymbol{\Psi}^{\frac{1}{2}}
  \mathbf{z}_{i, t},
  \quad
  \mathrm{with}
  \quad
  \mathbf{z}_{i, t}
  \sim
  \mathcal{N}
  \left(
  \mathbf{0},
  \mathbf{I}
  \right)
\end{equation}
where
$\left( \boldsymbol{\Psi}^{\frac{1}{2}} \right) \left( \boldsymbol{\Psi}^{\frac{1}{2}} \right)^{\prime} = \boldsymbol{\Psi}$ .

## Data Generation

### Notation

Let $t = `r time`$ be the number of time points and $n = `r n`$ be the number of individuals.

Let the initial condition
$\boldsymbol{\eta}_{0}$
be given by

\begin{equation}
\boldsymbol{\eta}_{0} \sim \mathcal{N} \left( \boldsymbol{\mu}_{\boldsymbol{\eta} \mid 0}, \boldsymbol{\Sigma}_{\boldsymbol{\eta} \mid 0} \right)
\end{equation}

\begin{equation}
\boldsymbol{\mu}_{\boldsymbol{\eta} \mid 0}
=
\left(
\begin{array}{c}
  `r mu0[[1]][1]` \\
  `r mu0[[1]][2]` \\
  `r mu0[[1]][3]` \\
\end{array}
\right)
\end{equation}

\begin{equation}
\boldsymbol{\Sigma}_{\boldsymbol{\eta} \mid 0}
=
\left(
\begin{array}{ccc}
  `r sigma0[1, 1]` & `r sigma0[1, 2]` & `r sigma0[1, 3]` \\
  `r sigma0[2, 1]` & `r sigma0[2, 2]` & `r sigma0[2, 3]` \\
  `r sigma0[3, 1]` & `r sigma0[3, 2]` & `r sigma0[3, 3]` \\
\end{array}
\right) .
\end{equation}

Let the constant vector $\boldsymbol{\alpha}$ be given by

\begin{equation}
\boldsymbol{\alpha}
=
\left(
\begin{array}{c}
  `r alpha[[1]][1]` \\
  `r alpha[[1]][2]` \\
  `r alpha[[1]][3]` \\
\end{array}
\right) .
\end{equation}

Let the transition matrix $\boldsymbol{\beta}$ be normally distributed with the following means

\begin{equation}
\left(
\begin{array}{ccc}
  `r beta_mu[1, 1]` & `r beta_mu[1, 2]` & `r beta_mu[1, 3]` \\
  `r beta_mu[2, 1]` & `r beta_mu[2, 2]` & `r beta_mu[2, 3]` \\
  `r beta_mu[3, 1]` & `r beta_mu[3, 2]` & `r beta_mu[3, 3]` \\
\end{array}
\right)
\end{equation}

and covariance matrix

\begin{equation}
\left(
\begin{array}{ccc}
  `r beta_sigma[1, 1]` & `r beta_sigma[1, 2]` & `r beta_sigma[1, 3]` & `r beta_sigma[1, 4]` & `r beta_sigma[1, 5]` & `r beta_sigma[1, 6]` & `r beta_sigma[1, 7]` & `r beta_sigma[1, 8]` & `r beta_sigma[1, 9]` \\
  `r beta_sigma[2, 1]` & `r beta_sigma[2, 2]` & `r beta_sigma[2, 3]` & `r beta_sigma[2, 4]` & `r beta_sigma[2, 5]` & `r beta_sigma[2, 6]` & `r beta_sigma[2, 7]` & `r beta_sigma[2, 8]` & `r beta_sigma[2, 9]` \\
  `r beta_sigma[3, 1]` & `r beta_sigma[3, 2]` & `r beta_sigma[3, 3]` & `r beta_sigma[3, 4]` & `r beta_sigma[3, 5]` & `r beta_sigma[3, 6]` & `r beta_sigma[3, 7]` & `r beta_sigma[3, 8]` & `r beta_sigma[3, 9]` \\
  `r beta_sigma[4, 1]` & `r beta_sigma[4, 2]` & `r beta_sigma[4, 3]` & `r beta_sigma[4, 4]` & `r beta_sigma[4, 5]` & `r beta_sigma[4, 6]` & `r beta_sigma[4, 7]` & `r beta_sigma[4, 8]` & `r beta_sigma[4, 9]` \\
  `r beta_sigma[5, 1]` & `r beta_sigma[5, 2]` & `r beta_sigma[5, 3]` & `r beta_sigma[5, 4]` & `r beta_sigma[5, 5]` & `r beta_sigma[5, 6]` & `r beta_sigma[5, 7]` & `r beta_sigma[5, 8]` & `r beta_sigma[5, 9]` \\
  `r beta_sigma[6, 1]` & `r beta_sigma[6, 2]` & `r beta_sigma[6, 3]` & `r beta_sigma[6, 4]` & `r beta_sigma[6, 5]` & `r beta_sigma[6, 6]` & `r beta_sigma[6, 7]` & `r beta_sigma[6, 8]` & `r beta_sigma[6, 9]` \\
  `r beta_sigma[7, 1]` & `r beta_sigma[7, 2]` & `r beta_sigma[7, 3]` & `r beta_sigma[7, 4]` & `r beta_sigma[7, 5]` & `r beta_sigma[7, 6]` & `r beta_sigma[7, 7]` & `r beta_sigma[7, 8]` & `r beta_sigma[7, 9]` \\
  `r beta_sigma[8, 1]` & `r beta_sigma[8, 2]` & `r beta_sigma[8, 3]` & `r beta_sigma[8, 4]` & `r beta_sigma[8, 5]` & `r beta_sigma[8, 6]` & `r beta_sigma[8, 7]` & `r beta_sigma[8, 8]` & `r beta_sigma[8, 9]` \\
  `r beta_sigma[9, 1]` & `r beta_sigma[9, 2]` & `r beta_sigma[9, 3]` & `r beta_sigma[9, 4]` & `r beta_sigma[9, 5]` & `r beta_sigma[9, 6]` & `r beta_sigma[9, 7]` & `r beta_sigma[9, 8]` & `r beta_sigma[9, 9]` \\
\end{array}
\right) .
\end{equation}

The `SimBetaN` function from the `simStateSpace` package generates random transition matrices from the multivariate normal distribution. Note that the function generates transition matrices that are weakly stationary.

Let the dynamic process noise $\boldsymbol{\Psi}$ be given by

\begin{equation}
\boldsymbol{\Psi}
=
\left(
\begin{array}{ccc}
  `r psi[1, 1]` & `r psi[1, 2]` & `r psi[1, 3]` \\
  `r psi[2, 1]` & `r psi[2, 2]` & `r psi[2, 3]` \\
  `r psi[3, 1]` & `r psi[3, 2]` & `r psi[3, 3]` \\
\end{array}
\right) .
\end{equation}

### R Function Arguments

```{r}
n
time
mu0
sigma0
sigma0_l
# first alpha in the list of length n
alpha[[1]]
# first beta in the list of length n
beta[[1]]
psi
psi_l
```

### Visualizing the Dynamics Without Process Noise (n = 5 with Different Initial Condition)

```{r no-error}
#| echo = FALSE
library(simStateSpace)
sim <- SimSSMVARIVary(
  n = 5,
  time = 50,
  mu0 = mu0,
  sigma0_l = sigma0_l,
  alpha = alpha,
  beta = beta,
  psi_l = list(
    matrix(
      data = 0,
      nrow = k,
      ncol = k
    )
  )
)
plot(sim, type = "l")
```

### Using the `SimSSMVARIVary` Function from the `simStateSpace` Package to Simulate Data

```{r error}
library(simStateSpace)
sim <- SimSSMVARIVary(
  n = n,
  time = time,
  mu0 = mu0,
  sigma0_l = sigma0_l,
  alpha = alpha,
  beta = beta,
  psi_l = psi_l
)
data <- as.data.frame(sim)
head(data)
plot(sim)
```

## Model Fitting

The `FitDTVARIDMx` function fits a DT-VAR model on each individual $i$.

```{r}
#| include = FALSE
library(fitDTVARMx)
```

```{r}
library(fitDTVARMx)
fit <- FitDTVARIDMx(
  data = data,
  observed = paste0("y", seq_len(k)),
  id = "id",
  ncores = parallel::detectCores()
)
fit
```

## Multivariate Meta-Analysis

The `MetaVARMx` function performs multivariate meta-analysis using the estimated parameters
and the corresponding sampling variance-covariance matrix for each individual $i$.
Estimates with the prefix `b0` correspond to the estimates of `beta_mu`.
Estimates with the prefix `t2` correspond to the estimates of `beta_sigma`.
Estimates with the prefix `i2` correspond to the estimates of heterogeniety.

```{r}
library(metaVAR)
meta <- MetaVARMx(
  object = fit,
  ncores = parallel::detectCores()
)
summary(meta)
```

## References

```{r}
#| include = FALSE
rm(list = ls())
```
